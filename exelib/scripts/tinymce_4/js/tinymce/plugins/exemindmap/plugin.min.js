/**
 * Mind mapping plugin for TinyMCE
 *
 * Released under the MIT license.
 * Author: Ignacio Gros (http://gros.es/) for http://exelearning.net/ 
 *
 * It works with mindmaps (https://www.mindmaps.app/), by David Richard (http://drichard.org/), licensed under AGPL V3.
 * See /tools/mindmaps/LICENSE
 *
 * It includes:
 * Cropper (https://fengyuanchen.github.io/cropper) and jQuery Cropper (https://fengyuanchen.github.io/jquery-cropper), by Chen Fengyuan, under the MIT license.
 * jQuery JavaScript Library v1.6.1, by John Resig, under the MIT license.
 * FileSaver.js 1.3.3, by Eli Grey, under the MIT license.
 *
 * Plugin icons by Google (https://material.io/tools/icons/), available under the Apache license version 2.0. (http://www.apache.org/licenses/LICENSE-2.0)
 *
 * Loading icon: http://ajaxload.info/
 */

tinymce.PluginManager.add('exemindmap', function(editor, url) {
    
	eXeMediaPluginDialog = {		
		
        mode : "new", // new or edit
		
        uploadType : "file", // base64 or file
        
        openDialog : function(){
            
            // Open the dialog
            win = editor.windowManager.open({
                title: _('Mind map'),
                body: [
                    {
                        type: 'label', 
                        name: 'mindmapImgInstructions', 
                        text: _("Use the editor to create a new mind map...")
                    },
                    {
                        hidden: true,
                        type: 'textbox', 
                        name: 'mindmapImgToSave', 
                        size: 40
                    },					
                    {
                        hidden: true,
                        type: 'textbox', 
                        name: 'mindmapCode', 
                        multiline: true
                    },
                    {   
                        type: 'button', 
                        name: 'mindmapEditorButton',
                        classes: 'primary',
                        text: _("Open the mind map editor"),
                        onclick: function(){
                            var win_win = new Ext.Window({
                                height:Ext.getBody().getViewSize().height*.85,
                                width:Ext.getBody().getViewSize().width*.95,
                                modal: true,
                                resizable: false,
                                maximizable: true,
                                id: 'interactiveVideoEditor',
                                title: _("Editor"),
                                items: {
                                    xtype: 'uxiframe',
                                    src: url+"/editor/?mode="+eXeMediaPluginDialog.uploadType,
                                    height: '100%'
                                },
                                closable: true,
                                listeners: {
                                    beforeclose:function(win) {
                                        if (top.mindmapEditor.closeConfirmed==false) {
                                            Ext.Msg.show({
                                                title: _("Confirm"),
                                                msg: _("If you have made changes and have not saved them, they will be lost. Do you really want to quit?"),
                                                buttons:Ext.Msg.YESNO,
                                                callback:function(btn) {
                                                    if('yes' === btn) {
                                                        top.mindmapEditor.closeConfirmed = true;
                                                        top.mindmapEditor.editor.close();
                                                    }
                                                }
                                            });
                                            return false;
                                        }
                                    }
                                }				
                            });
                            // Save the requiered data so you can close it, etc.
                            top.mindmapEditor.editor = win_win;
                            // Open the window
                            win_win.show();
                        }
                    },                    
                    {
                        type: 'textbox', 
                        name: 'mindmapTitle', 
                        size: 40, 
                        label: _('Descriptive title')
                    },
                    {   
                        type: 'checkbox', 
                        name: 'mindmapCaption', 
                        checked: true, 
                        text: _("Show the title under the image")
                    },
                    {   
                        hidden: eXeMediaPluginDialog.uploadType=="base64" ? true : false, // No Lightbox when using Base64 images (that will work if parsing the code before saving the content)
                        type: 'checkbox', 
                        name: 'linkToFullSizeImage', 
                        checked: false, 
                        text: _("Link to full size image")
                    },                    
                    {
						hidden: true,
                        type: 'container',
						layout: 'flex',
						direction: 'row',
						align: 'center',
						spacing: 5,
						items: [
							{name: 'originalWidth', type: 'textbox', maxLength: 5, size: 3},
							{type: 'label', text: 'x'},
							{name: 'originalHeight', type: 'textbox', maxLength: 5, size: 3}							
						]
					},                    
                    {
						type: 'container',
						label: 'Dimensions',
						layout: 'flex',
						direction: 'row',
						align: 'center',
						spacing: 5,
						items: [
							{name: 'width', type: 'textbox', maxLength: 5, size: 3, onchange: function(){ eXeMediaPluginDialog.recalcSize('width') }, ariaLabel: 'Width'},
							{type: 'label', text: 'x'},
							{name: 'height', type: 'textbox', maxLength: 5, size: 3, onchange: function(){ eXeMediaPluginDialog.recalcSize('height') }, ariaLabel: 'Height'},
							{name: 'constrain', type: 'checkbox', checked: true, text: 'Constrain proportions'}
						]
					}                    
                ],				
                onsubmit: function(e) {  
                    
                    var img = win.find("#mindmapImgToSave")[0].value();
                    var code = win.find("#mindmapCode")[0].value();
                    if (img=="" || code=="" || code.indexOf('{')!=0) {
                        editor.windowManager.alert(_('Please create a mind map.')); 
                        return false;
                    }
                    
                    var title = win.find("#mindmapTitle")[0].value();
                    
                    title = eXeMediaPluginDialog.stripHtml(title);
                    
                    if (title=="") {
                        editor.windowManager.alert(_('Please provide a title.')); 
                        return false;
                    }
                    
                    var alt = title.replace(/"/g,'&quot;');
                    
                    var figcaption = '';
                    if (win.find("#mindmapCaption")[0].checked()) {
                        figcaption = '<figcaption class="figcaption"><span class="title"><em>'+title+'</em></span></figcaption>';
                    }
                    
                    // linkToFullSizeImage (only when uploadType=="file")
                    var a1 = "";
                    var a2 = "";
                    if (eXeMediaPluginDialog.uploadType=="file" && win.find("#linkToFullSizeImage")[0].checked()) {
                        a1 = '<a href="'+img+'" rel="lightbox" title="'+alt+'">';
                        a2 = '</a>';
                    }      
                    
                    // Dimensions
                    var w = 600;
                    var h = 400;
                    var _w = win.find("#width")[0].value();
                    if (_w!="" && !isNaN(_w)) w = Math.round(_w);
                    var _h = win.find("#height")[0].value();
                    if (_h!="" && !isNaN(_h)) h = Math.round(_h);
                    
                    var content = '\
					<div class="exe-mind-map">\
						<figure class="exe-figure exe-image position-center" style="width:'+w+'px;">\
							'+a1+'<img src="'+img+'" width="'+w+'" height="'+h+'" alt="'+alt+'" />'+a2+'\
							'+figcaption+'\
						</figure>\
						<p class="exe-mindmap-code">'+code+'</p>\
					</div>\
                    ';
                    
					exe_tinymce.forcePrompt = false;
					
					if (eXeMediaPluginDialog.mode=="edit") {
						var node = editor.selection.getNode();
						// Remove the node instead of updating the HTML to avoid Base64 images
						$(node).remove();
                    } else {
						content += "..."; // Add a P after the map	
					}
					
					// Add the new content
					editor.execCommand('mceInsertContent', false, content, {skip_undo : 1});
                    
                    eXeMediaPluginDialog.showMindMapsTitles(editor);
                    
                    editor.windowManager.close();
                    
                    return false;
                    
                }
            });
            
            // Contants
            top.mindmapEditor = {
                pluginDialog : win,
                editor : "",
                data : "",
                authoringScript : $exeAuthoring,
                closeConfirmed : false,
                tinymce : tinymce.activeEditor
            }            
            
            // Get the previous values
            var elm = editor.selection.getNode();
            var c = elm.className;
            if (c=="exe-mind-map") {
                var e = $(elm);
                var title = $(".figcaption .title",e);
                var code = $(".exe-mindmap-code",e);
                var img = $("img",e);
                if (img.length==1 && code.length==1) {
					eXeMediaPluginDialog.mode = "edit";
					// Source code and image path
					win.find("#mindmapImgInstructions")[0].text(_("You can edit the mind map..."));
					win.find("#mindmapImgToSave")[0].value(img.attr("src"));
					var data = code.html();
                    win.find("#mindmapCode")[0].value(data);
                    top.mindmapEditor.data = data;
                    // Dimensions
                    var w = img.width();
                    var h = img.height()
                    if (w==0) w = img.attr("width");
                    if (h==0) h = img.attr("height");
                    if (w>0 && h>0) {
                        win.find("#originalWidth")[0].value(w);
                        win.find("#originalHeight")[0].value(h);
                        win.find("#width")[0].value(w);
                        win.find("#height")[0].value(h);
                    }
                    if (title.length==1) {
                        win.find("#mindmapTitle")[0].value(title.text());   
                    } else {
                        var img = $("img",e).eq(0);
                        win.find("#mindmapTitle")[0].value(img.attr("alt"));
                        win.find("#mindmapCaption")[0].checked(false);
                    }
                    // Lightbox
                    var a = $("a[rel='lightbox']",e);
                    if (a.length==1) win.find("#linkToFullSizeImage")[0].checked(true);
                }
            }
			
		}, // openDialog
        
        recalcSize : function(origin){
            if (win.find("#constrain")[0].checked()) {
                var originalWidth = win.find("#originalWidth")[0].value();
                var originalHeight = win.find("#originalHeight")[0].value();
                var wF = win.find("#width")[0];
                var hF = win.find("#height")[0];
                var w = wF.value();
                var h = hF.value();
                if (origin=="height") {
                    w = Math.round(h*originalWidth/originalHeight)
                    wF.value(w)
                } else {
                    h = Math.round(w*originalHeight/originalWidth)
                    hF.value(h)                
                }
            }
        },
        
        showMindMapsTitles : function(editor){
            var d = editor.getDoc();
            jQuery("HEAD #eXeMediaPluginDialogCSS",d).remove();
            var s = '<style type="text/css" id="eXeMediaPluginDialogCSS">';
                jQuery(".exe-mind-map",d).each(function(i){
                    var img = $("img",this);
                    if (img.length==1) {
                        img = img.eq(0);
                        var alt = img.attr("alt");
                        if (alt!="") s += '.exe-mind-map:nth-of-type('+(i+1)+'):before{content:"'+alt+'"}'
                    }
                });				
                s += '</style>';
            jQuery("HEAD",d).append(s);
        },
        
		activateButton : function(node) {
			var e = jQuery(node);
            if (e.attr("class")=='exe-mind-map') return true;
			if (e.parents(".exe-mind-map").length>0) return true;
			return false;
		},

        stripHtml : function(html) {
           var tmp = document.createElement("DIV");
           tmp.innerHTML = html;
           return tmp.textContent || tmp.innerText || "";
        }        
		
	} // Dialog    
    
    // Plugin button
    editor.addButton('exemindmap', {
        image: url + '/img/exemindmap.svg',
        tooltip: _('Mind map'),
        onclick: eXeMediaPluginDialog.openDialog,
		onPostRender: function() {
			var ctrl = this;
			editor.on('NodeChange', function(e) {
				ctrl.active(eXeMediaPluginDialog.activateButton(e.element));
			});
		}        
    });
    
	editor.on('init', function(e) {
		editor.dom.loadCSS(url + "/css/content.css");
        eXeMediaPluginDialog.showMindMapsTitles(editor);	        
	});
	
});